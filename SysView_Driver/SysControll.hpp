#pragma once

namespace SysControll
{
	extern "C" NTSTATUS IoControll(PDEVICE_OBJECT pDeviceObject, PIRP pIRP);
	extern "C" NTSTATUS IoCloseCall(PDEVICE_OBJECT pDeviceObject, PIRP pIRP);
	extern "C" NTSTATUS IoCreateCall(PDEVICE_OBJECT pDeviceObject, PIRP pIRP);

	#define IO_REQUEST_DRIVER CTL_CODE(FILE_DEVICE_UNKNOWN, 0x500, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_PROCESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x501, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_KILL_PROCESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x502, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_SUSPEND_PROCESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x503, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_RESUME_PROCESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x504, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_UNLOAD CTL_CODE(FILE_DEVICE_UNKNOWN, 0x505, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_THREAD CTL_CODE(FILE_DEVICE_UNKNOWN, 0x506, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_BLACKLIST_PROCESS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x507, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_THREAD_HANDLE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x508, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
	#define IO_REQUEST_MODULE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x509, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

	typedef struct _LIST_DATA
	{
		PULONG NodeCount; //Amount of nodes in the linked list
		void* buffer; //Buffer to PDRIVER_LIST array/vector
		HANDLE PID;

	}LIST_DATA, * PLIST_DATA;

	typedef struct _DATA_BLACKLIST
	{
		bool bRemove;
		wchar_t wName[MAX_PATH];
	}DATA_BLACKLIST, *PDATA_BLACKLIST;

	typedef struct _THREAD_HANDLE
	{
		HANDLE TID;
		PHANDLE hThread;
	}THREAD_HANDLE, * PTHREAD_HANDLE;
}
